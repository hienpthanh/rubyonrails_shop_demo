class WarehouseImport< ActiveRecord::Base

  self.table_name   = 'd_warehouse_import'
  self.primary_key  = 'import_id'

  #validates :title,:supplier_id, presence: true

  #has_many :product
  def self.get_all(params = [], page = 1, limit = 30)

    offset = (page-1)*limit
    sql = <<-SQL 
        SELECT 
          wi.import_id, 
          wi.title, 
          wi.code,
          wi.total_grand, 
          wi.created_date, 
          wi.modified_date,
          s.supplier_name,
          u1.first_name as created_first_name, 
          u1.last_name as created_last_name
        FROM
          d_warehouse_import AS wi
        INNER JOIN d_supplier s ON s.supplier_id = wi.supplier_id
        INNER JOIN d_user u1 ON u1.user_id = wi.created_by
        WHERE wi.del_flg = 0        
        ORDER BY wi.import_id DESC
        LIMIT #{limit} OFFSET #{offset}
    SQL
    return self.find_by_sql(sql) 
  end

  def self.add(data)
    wi                = self.new
    wi.title          = data[:title]
    wi.code           = data[:code]
    wi.total_grand    = data[:total_grand]
    wi.supplier_id    = data[:supplier_id]
    wi.note           = data[:note]
    wi.created_date   = Time.now
    wi.modified_date  = Time.now
    wi.created_by     = 1
    wi.modified_by    = 1
    return wi.save
  end

  def self.update(object, data)
    object.title          = data[:title]
    object.code           = data[:code]
    object.total_grand    = data[:total_grand]
    object.supplier_id    = data[:supplier_id]
    object.note           = data[:note]
    object.created_date   = Time.now
    object.modified_date  = Time.now
    object.created_by     = 1
    object.modified_by    = 1
    return object.save
  end

  def self.delete(object)
    object.del_flg        = 1
    object.modified_date  = Time.now
    object.modified_by    = 1
    return object.save
  end
end
