class Category < ActiveRecord::Base
  self.table_name   = 'd_category'
  self.primary_key  = 'category_id'
  validates :category_name, presence: true
  has_many :product
 def self.get_all
    select_sql      = "c.category_id, c.category_name, c.created_date, c.modified_date, u1.first_name as created_first_name, u1.last_name as created_last_name, u2.first_name as modified_first_name, u2.last_name as modified_last_name"
    join_user1_sql  = "INNER JOIN d_user u1 ON u1.user_id = c.created_by"
    join_user2_sql  = "INNER JOIN d_user u2 ON u2.user_id = c.created_by"
    list = self.select(select_sql).from("d_category AS c").joins(join_user1_sql + ' ' + join_user2_sql).where("c.del_flg = 0").order("c.category_id DESC")
    return list
  end

  def self.add(data)
    category = self.new
    category.category_name  = data[:category_name]
    category.created_date   = Time.now
    category.modified_date  = Time.now
    category.created_by     = 1
    category.modified_by    = 1
    return category.save
  end

  def self.update(data, object)
    data_update = {}
    data_update[:category_name]  = data[:category_name]
    data_update[:modified_date]  = Time.now
    data_update[:modified_by]    = 1
    return object.update_attributes(data_update)
  end

  # def self.delete(object)

  #   data                  = {}
  #   data[:del_flg]        = 1
  #   data[:modified_date]  = Time.now
  #   data[:modified_by]    = 1
  #   return object.update_attributes(data)
  # end

  def self.delete(object)
    object.del_flg        = 1
    object.modified_date  = Time.now
    object.modified_by    = 1
    return object.save
  end
end
